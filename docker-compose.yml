version: "3.7"

services:
  frontend:
    build: 
      context: ./frontend 
    ports:
     - 3000:3000
    container_name: frontend-con
    volumes: 
      - build_folder:/frontend/build
      - ./frontend/node_modules/:/frontend/node_modules
    restart: always
    image: run
    stdin_open: true
    tty: true

  backend:
    depends_on:
      - db
      - rabbitmq
    build:
      context: ./backend
    ports:
     - 5000:5000
    environment:
      FLASK_DEBUG: 1
      FLASK_APP: ./app.py
    container_name: backend-con
    expose:
      - 5000
    restart: always
    # command: flask run --host=0.0.0.0 --port=5000
    command: gunicorn --bind 0.0.0.0:5000 app:app
    links:
      - rabbitmq
      - db
    volumes:
      - ./backend:/usr/local/app/
    tty: true

  ai:
      build:
        context: ./ai
      ports:
      - "5001:5001" 
      environment:
        FLASK_DEBUG: 1
        FLASK_APP: ./server.py
      container_name: ai-con
      expose:
        - 5001
      restart: always
      command: flask run --host=0.0.0.0 --port=5001
      volumes:
        - ./ai:/usr/local/app/
      depends_on:
        - rabbitmq
        - db
      links:
        - rabbitmq

  db:
    image: mysql
    # platform: linux/amd64
    container_name: mysql-con
    ports:
      - 3307:3306
    volumes:
      - data_mysql:/var/lib/mysql
    env_file:
      - /.env
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    tty: true

  nginx:
    image: nginx:1.21.5-alpine
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - build_folder:/var/www/frontend
    container_name: nginx-con
    depends_on:
      - frontend
      - backend
    tty: true

  rabbitmq:
    image : rabbitmq:3-management
    container_name: rabbitmq-con
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    ports:
      - 5672:5672 
      - 15672:15672
    # command: rabbitmq-plugins enable rabbitmq_management
    volumes:
      - data_rabbitmq:/var/lib/rabbitmq
    tty: true

  worker:
      build:
        context: ./ai
        dockerfile: Dockerfile.celery
      container_name: worker-con
      user: nobody
      command: celery -A ai.tasks.celery_app worker --loglevel=info
      volumes:
        - ./ai:/ai
      depends_on:
        - db
        - rabbitmq
        - ai
      environment:
        - USE_MYSQL=1
        - IS_DOCKER=1
      tty: true

  flower:
    image: mher/flower
    container_name: flower-con
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/
      - FLOWER_PORT=5555
    ports:
      - 5555:5555
    tty: true

volumes:
  build_folder:
  data_mysql:
  data_rabbitmq:

#docker-compose up --build
#volume
#docker volume prune
# sudo curl -L “https://github.com/docker/compose/releases/download/2.2.3/docker-compose-$(uname -s)-$(uname -m)” -o /usr/local/bin/docker-compose
# docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=password --name mysql-con -v /var/lib/docker/volumes/mysql/_data mysql:latest --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci